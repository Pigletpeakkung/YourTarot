[build]
  command = "echo 'Static site build complete'"
  publish = "."
  
[build.environment]
  NODE_VERSION = "18"
  NPM_VERSION = "9"

# Build settings
[build.processing]
  skip_processing = false

[build.processing.css]
  bundle = true
  minify = true

[build.processing.js]
  bundle = true
  minify = true

[build.processing.html]
  pretty_urls = true

[build.processing.images]
  compress = true

# Redirects for SEO and user experience
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200
  
# API redirects (if you have backend services)
[[redirects]]
  from = "/api/*"
  to = "https://your-api-endpoint.com/:splat"
  status = 200
  force = true

# SEO-friendly redirects
[[redirects]]
  from = "/home"
  to = "/"
  status = 301

[[redirects]]
  from = "/about-us"
  to = "/#about"
  status = 301

[[redirects]]
  from = "/about-me"
  to = "/#about"
  status = 301

[[redirects]]
  from = "/services-page"
  to = "/#services"
  status = 301

[[redirects]]
  from = "/my-services"
  to = "/#services"
  status = 301

[[redirects]]
  from = "/portfolio-page"
  to = "/#portfolio"
  status = 301

[[redirects]]
  from = "/work"
  to = "/#portfolio"
  status = 301

[[redirects]]
  from = "/projects"
  to = "/#portfolio"
  status = 301

[[redirects]]
  from = "/testimonials-page"
  to = "/#testimonials"
  status = 301

[[redirects]]
  from = "/reviews"
  to = "/#testimonials"
  status = 301

[[redirects]]
  from = "/contact-us"
  to = "/#contact"
  status = 301

[[redirects]]
  from = "/contact-me"
  to = "/#contact"
  status = 301

[[redirects]]
  from = "/get-in-touch"
  to = "/#contact"
  status = 301

# Cultural AI specific redirects
[[redirects]]
  from = "/cultural-ai"
  to = "/#services"
  status = 301

[[redirects]]
  from = "/ai-solutions"
  to = "/#services"
  status = 301

[[redirects]]
  from = "/cross-cultural-ai"
  to = "/#services"
  status = 301

[[redirects]]
  from = "/collaborative-ai"
  to = "/#services"
  status = 301

# Project-specific redirects
[[redirects]]
  from = "/ton-foundation"
  to = "/#portfolio"
  status = 301

[[redirects]]
  from = "/blockchain-ai"
  to = "/#portfolio"
  status = 301

[[redirects]]
  from = "/ecommerce-ai"
  to = "/#portfolio"
  status = 301

# Location-based redirects
[[redirects]]
  from = "/thailand"
  to = "/"
  status = 301

[[redirects]]
  from = "/kamphaeng-phet"
  to = "/"
  status = 301

[[redirects]]
  from = "/london"
  to = "/"
  status = 301

[[redirects]]
  from = "/tokyo"
  to = "/"
  status = 301

[[redirects]]
  from = "/bangkok"
  to = "/"
  status = 301

# Remove trailing slashes
[[redirects]]
  from = "/*/"
  to = "/:splat"
  status = 301

# Remove index.html from URLs
[[redirects]]
  from = "/index.html"
  to = "/"
  status = 301

# Remove .html extensions
[[redirects]]
  from = "/*.html"
  to = "/:splat"
  status = 301

# Social media redirects
[[redirects]]
  from = "/github"
  to = "https://github.com/Pigletpeakkung"
  status = 301

[[redirects]]
  from = "/linkedin"
  to = "https://linkedin.com/in/thanatsitt-santisamranwilai"
  status = 301

[[redirects]]
  from = "/twitter"
  to = "https://twitter.com/ThanatsittS"
  status = 301

# Blog redirects (future expansion)
[[redirects]]
  from = "/blog"
  to = "/#portfolio"
  status = 301

[[redirects]]
  from = "/articles"
  to = "/#portfolio"
  status = 301

[[redirects]]
  from = "/insights"
  to = "/#portfolio"
  status = 301

# Security Headers
[[headers]]
  for = "/*"
  [headers.values]
    # Security headers
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"
    
    # SEO headers
    X-Robots-Tag = "index, follow"
    
    # Content Security Policy
    Content-Security-Policy = """
      default-src 'self';
      script-src 'self' 'unsafe-inline' 'unsafe-eval' 
        https://www.googletagmanager.com 
        https://www.google-analytics.com 
        https://connect.facebook.net 
        https://www.facebook.com
        https://cdnjs.cloudflare.com;
      style-src 'self' 'unsafe-inline' 
        https://fonts.googleapis.com 
        https://cdnjs.cloudflare.com;
      font-src 'self' 
        https://fonts.gstatic.com 
        https://cdnjs.cloudflare.com;
      img-src 'self' data: blob: 
        https://raw.githubusercontent.com 
        https://via.placeholder.com 
        https://github.com
        https://www.google-analytics.com
        https://www.facebook.com;
      connect-src 'self' 
        https://www.google-analytics.com 
        https://api.github.com
        https://fonts.googleapis.com
        https://your-api-endpoint.com;
      frame-src 'self' 
        https://www.youtube.com 
        https://www.facebook.com;
      object-src 'none';
      base-uri 'self';
      form-action 'self';
      upgrade-insecure-requests;
    """
    
    # Performance headers
    X-DNS-Prefetch-Control = "on"
    
    # Cultural context headers
    X-Cultural-Context = "Thai-Western-Japanese"
    X-Service-Type = "AI-Cultural-Bridge"

# Specific headers for different file types
[[headers]]
  for = "/*.html"
  [headers.values]
    Cache-Control = "public, max-age=300, must-revalidate"
    Content-Type = "text/html; charset=utf-8"

[[headers]]
  for = "/*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "text/css; charset=utf-8"

[[headers]]
  for = "/*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "application/javascript; charset=utf-8"

[[headers]]
  for = "/*.json"
  [headers.values]
    Cache-Control = "public, max-age=3600"
    Content-Type = "application/json; charset=utf-8"

[[headers]]
  for = "/*.xml"
  [headers.values]
    Cache-Control = "public, max-age=3600"
    Content-Type = "application/xml; charset=utf-8"

[[headers]]
  for = "/*.txt"
  [headers.values]
    Cache-Control = "public, max-age=3600"
    Content-Type = "text/plain; charset=utf-8"

# Image optimization headers
[[headers]]
  for = "/*.jpg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "image/jpeg"

[[headers]]
  for = "/*.jpeg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "image/jpeg"

[[headers]]
  for = "/*.png"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "image/png"

[[headers]]
  for = "/*.webp"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "image/webp"

[[headers]]
  for = "/*.svg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "image/svg+xml"

[[headers]]
  for = "/*.ico"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "image/x-icon"

# Font headers
[[headers]]
  for = "/*.woff"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "font/woff"

[[headers]]
  for = "/*.woff2"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "font/woff2"

[[headers]]
  for = "/*.ttf"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "font/ttf"

[[headers]]
  for = "/*.otf"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "font/otf"

# SEO-specific file headers
[[headers]]
  for = "/sitemap.xml"
  [headers.values]
    Content-Type = "application/xml; charset=utf-8"
    Cache-Control = "public, max-age=3600"
    X-Robots-Tag = "noindex"

[[headers]]
  for = "/robots.txt"
  [headers.values]
    Content-Type = "text/plain; charset=utf-8"
    Cache-Control = "public, max-age=3600"

[[headers]]
  for = "/favicon.ico"
  [headers.values]
    Content-Type = "image/x-icon"
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/manifest.json"
  [headers.values]
    Content-Type = "application/manifest+json; charset=utf-8"
    Cache-Control = "public, max-age=3600"

# API headers
[[headers]]
  for = "/api/*"
  [headers.values]
    Access-Control-Allow-Origin = "https://pegearts.com"
    Access-Control-Allow-Methods = "GET, POST, PUT, DELETE, OPTIONS"
    Access-Control-Allow-Headers = "Content-Type, Authorization"
    Access-Control-Max-Age = "3600"

# Error page headers
[[headers]]
  for = "/404.html"
  [headers.values]
    Cache-Control = "public, max-age=300"
    X-Robots-Tag = "noindex, nofollow"

# Form handling
[forms]
  # Enable form handling
  [forms.contact]
    name = "contact"
    action = "/"
    method = "POST"
    
# Environment variables for different contexts
[context.production.environment]
  NODE_ENV = "production"
  API_URL = "https://your-api-endpoint.com"
  GOOGLE_ANALYTICS_ID = "G-XXXXXXXXXX"
  FACEBOOK_PIXEL_ID = "XXXXXXXXXX"

[context.deploy-preview.environment]
  NODE_ENV = "development"
  API_URL = "https://staging-api-endpoint.com"
  GOOGLE_ANALYTICS_ID = "G-XXXXXXXXXX"

[context.branch-deploy.environment]
  NODE_ENV = "development"
  API_URL = "https://dev-api-endpoint.com"

# Plugins for enhanced functionality
[[plugins]]
  package = "@netlify/plugin-lighthouse"
  
  [plugins.inputs]
    output_path = "lighthouse"
    
[[plugins]]
  package = "netlify-plugin-html-validate"
  
  [plugins.inputs]
    enable = true
    
[[plugins]]
  package = "netlify-plugin-minify-html"
  
  [plugins.inputs]
    contexts = ["production"]
    
[[plugins]]
  package = "netlify-plugin-checklinks"
  
  [plugins.inputs]
    entryPoints = ["*.html"]
    recursive = true
    pretty = true
    
[[plugins]]
  package = "netlify-plugin-sitemap"
  
  [plugins.inputs]
    baseUrl = "https://pegearts.com"
    
# Functions (if you add serverless functions later)
[functions]
  directory = "functions"
  
# Edge functions (for advanced use cases)
[[edge_functions]]
  function = "geo-location"
  path = "/*"
  
# Advanced redirects with conditions
[[redirects]]
  from = "/api/contact"
  to = "/.netlify/functions/contact"
  status = 200
  
[[redirects]]
  from = "/api/analytics"
  to = "/.netlify/functions/analytics"
  status = 200
  
# Language-specific redirects (for future internationalization)
[[redirects]]
  from = "/th/*"
  to = "/th/index.html"
  status = 200
  
[[redirects]]
  from = "/ja/*"
  to = "/ja/index.html"
  status = 200
  
# Mobile-specific redirects
[[redirects]]
  from = "/m/*"
  to = "/:splat"
  status = 301
  
[[redirects]]
  from = "/mobile/*"
  to = "/:splat"
  status = 301

# Legacy URL redirects (common patterns)
[[redirects]]
  from = "/wp-admin/*"
  to = "/404.html"
  status = 404
  
[[redirects]]
  from = "/wp-content/*"
  to = "/404.html"
  status = 404
  
[[redirects]]
  from = "/admin/*"
  to = "/404.html"
  status = 404
  
[[redirects]]
  from = "/wp-login.php"
  to = "/404.html"
  status = 404

# Social media verification files
[[redirects]]
  from = "/google*.html"
  to = "/google-site-verification.html"
  status = 200
  
[[redirects]]
  from = "/BingSiteAuth.xml"
  to = "/bing-site-verification.xml"
  status = 200

# Analytics and tracking redirects
[[redirects]]
  from = "/analytics"
  to = "https://analytics.google.com/analytics/web/#/p123456789/reports/intelligenthome"
  status = 301
  
[[redirects]]
  from = "/search-console"
  to = "https://search.google.com/search-console"
  status = 301

# Development and testing redirects
[[redirects]]
  from = "/test"
  to = "/index.html"
  status = 200
  condition = "Role=admin"
  
[[redirects]]
  from = "/dev"
  to = "/index.html"
  status = 200
  condition = "Role=developer"
